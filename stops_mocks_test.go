// Code generated by MockGen. DO NOT EDIT.
// Source: stops.go

// Package bete is a generated GoMock package.
package bete

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBusStopRepository is a mock of BusStopRepository interface
type MockBusStopRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBusStopRepositoryMockRecorder
}

// MockBusStopRepositoryMockRecorder is the mock recorder for MockBusStopRepository
type MockBusStopRepositoryMockRecorder struct {
	mock *MockBusStopRepository
}

// NewMockBusStopRepository creates a new mock instance
func NewMockBusStopRepository(ctrl *gomock.Controller) *MockBusStopRepository {
	mock := &MockBusStopRepository{ctrl: ctrl}
	mock.recorder = &MockBusStopRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBusStopRepository) EXPECT() *MockBusStopRepositoryMockRecorder {
	return m.recorder
}

// Find mocks base method
func (m *MockBusStopRepository) Find(id string) (BusStop, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", id)
	ret0, _ := ret[0].(BusStop)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find
func (mr *MockBusStopRepositoryMockRecorder) Find(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockBusStopRepository)(nil).Find), id)
}
