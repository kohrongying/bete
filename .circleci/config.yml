version: 2.1
orbs:
  helm: circleci/helm@0.2.3
jobs:
  test:
    docker:
      - image: circleci/golang:1.14

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    steps:
      - checkout
      - run: go test -v -cover -coverprofile=coverage.out -covermode=count ./...
  build:
    machine: true
    steps:
      - checkout
      - run: echo "export commit=$(git rev-parse --verify --short HEAD)" >> $BASH_ENV
      - run:
          name: Docker login
          command: echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com --username yi-jiayu --password-stdin
      - run:
          name: Docker build
          command: docker build -t docker.pkg.github.com/yi-jiayu/bete/bete:$commit --build-arg commit=$commit .
      - run:
          name: Docker push
          command: docker push docker.pkg.github.com/yi-jiayu/bete/bete:$commit
      - run:
          name: Create release in Sentry
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            sentry-cli releases new -p bete $commit
            sentry-cli releases set-commits --auto $commit
    environment:
      SENTRY_ORG: jiayu-yi
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - helm/install-helm-client:
          version: "v3.0.0"
      - run:
          name: Create kubeconfig file
          command: base64 --decode <<< $KUBECONFIG_FILE_BASE64 > $KUBECONFIG
      - checkout
      - run: bin/deploy.sh $(git rev-parse --verify --short HEAD) staging
    environment:
      SENTRY_ORG: jiayu-yi
      KUBECONFIG: kubeconfig.yaml

workflows:
  version: 2
  deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
